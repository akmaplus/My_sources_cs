using System;      //Цель изучение методов доступа к статическим членам класса во внешних сборках


public class HelloMessage2 : HelloMessage       //после двоеточия : указываем родительский класс
{ 
  //конструктор по умолчанию - производного класса
  public HelloMessage2()
               : base()         //вызов конструктора базового класса - после двоеточия слово : base
  { 
    _msg = "hello";             //меняем защищенный член базового класса

    base.Test2 = "static";      //меняем свойство класса, адресующее статическую переменную

    //base.Test3 = "StAtIc";            //не катит!!! статика!!! ;))))))))))))
    HelloMessage2.Test3 = "StAtIc";     //все ОК!! указываем имя этого класса и статический член класса, в данном случае унаследованный от базового
  } 
}

 // ВЫВОДЫ - для контроля статических членов извне(чтобы С# компилер не ругался), необходимо наследование классов и работа в конструкторах дочернего класса


class TestApp
{
  static void Main()
  {

   HelloMessage hm = new HelloMessage2();

   hm.Speak();
   hm.Speak2();

   hm.Test = "Hello Moto";      //доступ к публичным свойствам класса
   hm.Test2 = "HELLO MOTO";

   hm.Speak();
   hm.Speak2();

   HelloMessage2.Say(); //есть доступ к статике по имени класса
   //hm.Say();         //но не по ссылке на экземпляр!!!


   HelloMessage2.Test3 = "STATIC";   //работает! но это глупо ;))))
   //hm.Test3 = "STATIC";   //так нельзя!! статика, так использовать нужно в конструкторе, указывая имя класса, не ссылку на экземпляр!!!
   hm.Speak2();

  }
}

